اولین خروجی : i = 1  j = 10 میشود. در خوده داخل تابع اصلی یک اسکوپ تعریف کرده ایم. و بعد از مقدار دهی i j تابع swap را فراخوانی کرده ایم که در این تابع جای دو متغیر را تعویض می کند. تابع از نوع void است و مقادیر جابجا شده را هم ذحیره نکرده ایم . به همین دلیل در تایع اصلی همان مقادیر  i j نمایش داده میشود.

دومین خروجی : i = 2  j = 6 میشود. تابع f1 را صدا زده ایم و مقدار ++i را به آن داده ایم . در همینجا فقط فقط مقدار  i = 1 برای تابع فرستاده میشود و بعد از آن مقدار i = 2 میشود آنهم به دلیل ++i . خروجی تابع f1 در داخل j ریخته میشود و مقدار آن تغییر میکند . در خوده تابع f1 متغیری از نوع استاتیک که در خود مقدار را ذخیره میکنند حتی بعد از اتمام آن اسکوپ با مقدار 5 تعریف کرده ایم و بعد از آن با مقدار x  که همان دریافتی تابع است که بشود i = 1 جمع میکنیم و حاصل جمع که برابر 6 است را ریترن می کنیم و این مقدار در j ذخیره میشود.

سومین خروجی : i = 14 j = 14 : از تابع تو در تو استفاده شده است و ارگومان هایی که تابع فرعی f2 میگیرید برابر است با  i = 7 & j = 6 :که آدرس j فرستاده میشود و کال بای رفرنس انجام میگیرد. در داخل تابع فرعی x = i & *p = jمیباشد که در عملیات اوله آن این دو باهم جمع میشوند و مقدارش میشود 13. بعد از ان از دستور تک خطی ?: استفاده کرده ایم و داریم : ایا 13 > 20 است ؟ اگر جواب بله است مقدار 20 قرار بده و اگر نیست مقدارش که همان 13 است را یه واحد اضافه کن و با توجه به همین پس مقادیر i & j = 14 میشود و در تابع اصلی چاپ میگردد.

چهارمین خروجی : i = 13 j = 14 میشود . در تابع اصلی هستیم و از داخل آن اسکوپ داخل مین بیرون آمده ایم . مقادیر i j در خوده تابع مقدار دهی نشده اند (متغیر از نوع لوکال نیستند) از نوع گلوبال اند و مقدار آن  i = 12 static j = 8.چرا  i = 12؟ مقدار اولیه i = 10 در گلوبال است اما در داخله اسکوپه داخل مین در تابع f1 مقدار متغیر گلوبال را به ازای هر بار فراخوانی تابع f1 یک واحد به آن اضاف میشود و به ادامه برنامه برویم : دوباره تابع f1 فراخوانی شده پس مقدار i = 13 میشود . در اینجا استاتیک j داریم که مقادیر را در خود تا پایان برنامه سیو میکند و تا به اینجا j = 8است .i / 2 = 6وارد تابع میشود و با j = 8جمع و ریترن میشود پس j = 14 است .

خروجی پنجم : i = 14 j = 20 : تا به اینجا i = 13 از نوع گلوبال است و وارد تابع f1 میشود و یک مقدار به آن اضاف مشود پس i = 14. این مقادیر به عنوان ارگومان تابع f2 میباشند (   i = 14 & j = 14 ) و مانند سومین خروجی به دلیل ایینکه جمع این دو ارگومان بیشتر از 20 است مقدار j = 20 قرار داده میشود و چون کال بای رفرنس است پس در تابع اصلی اعمال میشود .

	************* تمام ****************
